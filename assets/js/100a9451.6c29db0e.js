"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[7372],{46062:(e,t,n)=>{n.d(t,{A:()=>a});n(96540);var s=n(74848);function a(e){function t(){return t=e.id?e.id:(t=(t=(t=e.caption).replaceAll("."," ")).replaceAll(" ","-")).toLowerCase()}return(0,s.jsxs)("figure",{id:t(),align:e.align?e.align:"center",style:e.style?e.style:{},children:[e.children,e.src?(0,s.jsx)("img",{src:e.src,alt:e.alt}):(0,s.jsx)(s.Fragment,{}),(0,s.jsx)("figcaption",{align:e.align?e.align:"center",style:{fontWeight:"bold"},children:e.caption}),(0,s.jsx)("figcaption",{align:e.align?e.align:"center",style:{},children:e.subcaption})]})}},6688:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>c,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"structural-patterns/facade","title":"Fa\xe7ade Pattern","description":"Fa\xe7ade is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes.","source":"@site/design-patterns/structural-patterns/facade.mdx","sourceDirName":"structural-patterns","slug":"/structural-patterns/facade","permalink":"/design-patterns/structural-patterns/facade","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"docsSidebar","previous":{"title":"Adapter Pattern","permalink":"/design-patterns/structural-patterns/adapter"}}');var a=n(74848),r=n(28453),i=n(46062);const c={},l="Fa\xe7ade Pattern",o={},d=[{value:"Slides",id:"slides",level:2},{value:"Step by Step Implementation",id:"step-by-step-implementation",level:2}];function p(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"fa\xe7ade-pattern",children:"Fa\xe7ade Pattern"})}),"\n",(0,a.jsxs)(t.blockquote,{children:["\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.strong,{children:"Fa\xe7ade"})," is a structural design pattern that provides a simplified interface to a library, a framework, or any other complex set of classes."]}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.a,{href:"https://refactoring.guru/design-patterns/facade",children:"~ Refactoring Guru"})}),"\n"]}),"\n",(0,a.jsx)(i.A,{caption:"Fa\xe7ade Pattern UML Class Diagram",children:(0,a.jsx)(t.mermaid,{value:"classDiagram\nclass Facade {\n+operation()\n}\n\nclass SubsystemA {\n+operationA()\n}\n\nclass SubsystemB {\n+operationB()\n}\n\nclass SubsystemC {\n+operationC()\n}\n\nFacade --\x3e SubsystemA : uses\nFacade --\x3e SubsystemB : uses\nFacade --\x3e SubsystemC : uses"})}),"\n",(0,a.jsx)(t.p,{children:"The Facade design pattern simplifies complex subsystems by providing a simplified interface. It allows clients to interact with the subsystem through a single facade class, isolating them from its internal details. Facades can be used to structure subsystems into layers and reduce coupling between multiple subsystems."}),"\n",(0,a.jsx)(t.h2,{id:"slides",children:"Slides"}),"\n",(0,a.jsx)(i.A,{caption:"Factory Pattern",subcaption:(0,a.jsx)(t.a,{href:"/slides-html/Facade/#0",target:"_blank",rel:"noopener noreferrer",children:"full screen click here"}),children:(0,a.jsx)("iframe",{height:"500",width:"100%",src:"/slides-html/Facade/#0",title:"W3Schools Free Online Web Tutorials"})}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h2,{id:"step-by-step-implementation",children:"Step by Step Implementation"}),"\n",(0,a.jsxs)(t.p,{children:["In this tutorial, we\u2019ll implement the ",(0,a.jsx)(t.strong,{children:"Facade Pattern"})," to simplify interaction with a complex video processing system. The facade class will provide an easy interface for the client to convert videos, hiding the details of the subsystem\u2019s multiple classes."]}),"\n",(0,a.jsx)("table",{children:(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("div",{className:"",children:(0,a.jsx)("iframe",{height:"651px",width:"294px",src:"/slides-html/Facade-Implementation/#0",title:"W3Schools Free Online Web Tutorials"})})}),(0,a.jsx)("td",{children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",metastring:"live",live:!0,children:'function FacadeDemo() {\n    class VideoFile {\n        constructor(filename) {\n            this.filename = filename;\n            this.format = filename.split(".").pop();\n        }\n    }\n\n    class AudioMixer {\n        fix(audioStream) {\n            return "Audio fixed";\n        }\n    }\n\n    class BitrateReader {\n        static read(filename, codec) {\n            return "Reading file at given bitrate";\n        }\n        static convert(buffer, codec) {\n            return "Converting file bitrate";\n        }\n    }\n\n    class CodecFactory {\n        static extract(file) {\n            return file.format === "mp4" ? new MPEG4CompressionCodec() : new OggCompressionCodec();\n        }\n    }\n\n    class OggCompressionCodec {\n        constructor() {\n            this.type = "ogg";\n        }\n    }\n\n    class MPEG4CompressionCodec {\n        constructor() {\n            this.type = "mp4";\n        }\n    }\n\n    return <div>Subsystem classes defined.</div>;\n}\n'})})})]})})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>c});var s=n(96540);const a={},r=s.createContext(a);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);